# Server configuration
server.port=${SERVER_PORT:9092}
server.error.include-stacktrace=never
server.error.include-message=always

# R2DBC Database configuration
spring.r2dbc.url=r2dbc:postgresql://${DB_HOST:localhost}:${DB_PORT:54322}/tweet_service_db
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres

# Security configuration
app.security.jwt.keystore-location=keystore.jks
app.security.jwt.keystore-password=password
app.security.jwt.key-alias=tweebyte

# Cache configuration
spring.data.redis.host=localhost
spring.data.redis.port=${CACHE_PORT:63790}
spring.data.redis.repositories.enabled=false

# Client configuration
app.user.base-url=http://localhost:9091
app.interaction.base-url=http://localhost:9093

spring.r2dbc.pool.enabled=true

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=metrics,health,circuitbreakers

resilience4j.circuitbreaker.configs.default.slidingWindowSize=1
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=1
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=1
resilience4j.circuitbreaker.configs.default.failureRateThreshold=100
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.followedIdsCircuitBreaker.baseConfig=default
resilience4j.circuitbreaker.instances.followedIdsCircuitBreaker.waitDurationInOpenState=5000
